"""initial migration

Revision ID: a20ad62bab85
Revises: 
Create Date: 2024-08-15 18:14:56.131524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a20ad62bab85'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('events', 'collaborator_support_id',
                    existing_type=sa.Integer(),
                    nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('collaborator_support_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('attendees', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='events_client_id_fkey'),
    sa.ForeignKeyConstraint(['collaborator_support_id'], ['collaborators.id'], name='events_collaborator_support_id_fkey'),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], name='events_contract_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_table('collaborators',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('collaborators_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('employee_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='collaborators_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='collaborators_pkey'),
    sa.UniqueConstraint('email', name='collaborators_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_collaborators_employee_number', 'collaborators', ['employee_number'], unique=True)
    op.create_table('contracts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('commercial_collaborator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('amount_due', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('creation_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='contracts_client_id_fkey'),
    sa.ForeignKeyConstraint(['commercial_collaborator_id'], ['collaborators.id'], name='contracts_commercial_collaborator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contracts_pkey')
    )
    op.create_index('ix_contracts_id', 'contracts', ['id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permissions_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permissions_role_id_fkey')
    )
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_contact', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('commercial_collaborator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['commercial_collaborator_id'], ['collaborators.id'], name='clients_commercial_collaborator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='clients_pkey')
    )
    op.create_index('ix_clients_id', 'clients', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', postgresql.ENUM('sales', 'support', 'management', name='roleenum'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key')
    )
    op.create_table('permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey'),
    sa.UniqueConstraint('name', name='permissions_name_key')
    )
    # ### end Alembic commands ###
